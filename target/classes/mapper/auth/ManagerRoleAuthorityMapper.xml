<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fxl.application.auth.mapper.ManagerRoleAuthorityMapper">
	<resultMap id="BaseResultMap"
		type="com.fxl.application.auth.model.po.ManagerRoleAuthority">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="role_id" property="roleId" jdbcType="INTEGER" />
		<result column="authority_id" property="authorityId" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, role_id, authority_id
	</sql>
	<select id="findById" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from manager_role_authority
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="delete" parameterType="java.lang.Integer">
		delete from manager_role_authority
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.fxl.application.auth.model.po.ManagerRoleAuthority">
		insert into manager_role_authority (id, role_id, authority_id
		)
		values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER},
		#{authorityId,jdbcType=INTEGER}
		)
	</insert>
	<update id="update"
		parameterType="com.fxl.application.auth.model.po.ManagerRoleAuthority">
		update manager_role_authority
		<set>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=INTEGER},
			</if>
			<if test="authorityId != null">
				authority_id = #{authorityId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>