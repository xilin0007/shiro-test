<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fxl.application.auth.mapper.ManagerAdminRoleMapper">
	<resultMap id="BaseResultMap"
		type="com.fxl.application.auth.model.po.ManagerAdminRole">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="admin_id" property="adminId" jdbcType="INTEGER" />
		<result column="role_id" property="roleId" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, admin_id, role_id
	</sql>
	<select id="findById" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from manager_admin_role
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="delete" parameterType="java.lang.Integer">
		delete from manager_admin_role
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.fxl.application.auth.model.po.ManagerAdminRole">
		insert into manager_admin_role (admin_id, role_id
		)
		values (#{adminId,jdbcType=INTEGER},
		#{roleId,jdbcType=INTEGER}
		)
	</insert>
	<update id="update" parameterType="com.fxl.application.auth.model.po.ManagerAdminRole">
		update manager_admin_role
		<set>
			<if test="adminId != null">
				admin_id = #{adminId,jdbcType=INTEGER},
			</if>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 获取用户角色 -->
	<select id="listRoleByAdminId" resultType="java.lang.Integer" parameterType="int">
		select distinct(mr.role_id) as roleId
		from crm_role r left join manager_admin_role mr on r.id = mr.role_id where
		mr.admin_id = #{value}
	</select>
</mapper>